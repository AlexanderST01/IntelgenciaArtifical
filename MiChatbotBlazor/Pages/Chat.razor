@page "/chat"
@page "/chat/{sessionId:int}"
@inject SessionStateService SessionState
@implements IDisposable

<PageTitle>Chat - Mi Chatbot</PageTitle>

<div class="container-fluid h-100">
    <div class="row h-100">
        <!-- Área principal del chat -->
        <div class="col-12 p-0">
            <ChatComponent SessionId="currentSessionId" />
        </div>
    </div>
</div>

@code {
    [Parameter] public int? SessionId { get; set; }
    
    private int currentSessionId = 1;

    protected override void OnInitialized()
    {
        currentSessionId = SessionId ?? 1;
        
        // Suscribirse a cambios de sesión
        SessionState.SessionChanged += OnSessionChanged;
        
        // Si hay una sesión actual en el estado, usarla
        if (SessionState.CurrentSessionId > 0)
        {
            currentSessionId = SessionState.CurrentSessionId;
        }
    }

    protected override void OnParametersSet()
    {
        if (SessionId.HasValue && SessionId.Value != currentSessionId)
        {
            currentSessionId = SessionId.Value;
            SessionState.SetCurrentSession(currentSessionId);
        }
    }

    private void OnSessionChanged(int sessionId)
    {
        currentSessionId = sessionId;
        InvokeAsync(StateHasChanged);
    }

    private void LoadSession(int sessionId)
    {
        currentSessionId = sessionId;
        SessionState.SetCurrentSession(sessionId);
        StateHasChanged();
    }

    public void Dispose()
    {
        SessionState.SessionChanged -= OnSessionChanged;
    }
}
