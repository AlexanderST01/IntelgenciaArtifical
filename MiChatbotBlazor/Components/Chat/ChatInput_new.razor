@using Microsoft.AspNetCore.Components.Web

<div class="chat-input-container bg-white border-top p-3">
    <div class="input-group">
        <input type="text" 
               class="form-control" 
               placeholder="Escribe tu mensaje aquÃ­..."
               @bind="currentMessage"
               @onkeypress="HandleKeyPress"
               disabled="@IsLoading" />
        
        <button class="btn btn-primary" 
                @onclick="HandleSendMessage"
                disabled="@(IsLoading || string.IsNullOrWhiteSpace(currentMessage))">
            @if (IsLoading)
            {
                <span class="spinner-border spinner-border-sm me-1" role="status"></span>
            }
            else
            {
                <i class="fas fa-paper-plane"></i>
            }
        </button>
    </div>
</div>

<style>
    .chat-input-container {
        border-top: 1px solid #dee2e6;
    }

    .input-group .form-control {
        border-radius: 20px 0 0 20px;
        border-right: none;
    }

    .input-group .btn {
        border-radius: 0 20px 20px 0;
        border-left: none;
    }

    .input-group .form-control:focus {
        box-shadow: none;
        border-color: #007bff;
    }
</style>

@code {
    [Parameter] public EventCallback<string> OnSendMessage { get; set; }
    [Parameter] public bool IsLoading { get; set; }

    private string currentMessage = string.Empty;

    private async Task HandleSendMessage()
    {
        if (!string.IsNullOrWhiteSpace(currentMessage) && !IsLoading)
        {
            var message = currentMessage;
            currentMessage = string.Empty;
            await OnSendMessage.InvokeAsync(message);
        }
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter" && !e.ShiftKey)
        {
            await HandleSendMessage();
        }
    }
}
